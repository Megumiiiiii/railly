---
const projects = [
  {
    title: "Multi-Client Chat Server",
    tags: ["Rust", "TCP", "Concurrency"],
    description: "A Rust-based chat server supporting multiple clients with concurrent connections.",
    link: "#",
    icon: "üí¨",
    status: "Planning",
    metadata: {
      type: "Online Textbook",
      details: "This project will be presented as an online textbook, guiding you through building the server step-by-step, complete with quizzes to reinforce your learning."
    }
  },
  {
    title: "UI-Oriented Language",
    tags: ["Rust", "Language Design"],
    description: "A custom programming language focused on UI development, implemented in Rust.",
    link: "#",
    icon: "üñ•Ô∏è",
    status: "Backlog",
    metadata: {
      type: "Programming Language",
      vision: "Aiming to create a reactive programming language that combines the best aspects of document languages and scripting, with a focus on predictability and formal structure."
    }
  },
];

function getTagClasses(tag) {
  switch (tag.toLowerCase()) {
    case 'rust':
      return 'bg-orange-100 text-orange-800';
    case 'math':
      return 'bg-blue-100 text-blue-800';
    case 'project':
      return 'bg-purple-100 text-purple-800';
    default:
      return 'bg-primary/10 text-primary';
  }
}

function getStatusClasses(status) {
  switch (status.toLowerCase()) {
    case 'backlog':
    case 'backlog/research':
      return 'bg-gray-100 text-gray-800';
    case 'planning':
      return 'bg-blue-100 text-blue-800';
    case 'in progress':
      return 'bg-yellow-100 text-yellow-800';
    case 'done':
      return 'bg-green-100 text-green-800';
    default:
      return 'bg-primary/10 text-primary';
  }
}
---

<section class="project-showcase bg-background text-foreground">
  <h2 class="text-lg m-0">Upcoming projects</h2>
  <div class="flex flex-wrap mt-5 space-y-5">
    {projects.map((project) => (
      <div class="project-card border border-border rounded-lg p-6 transition-all duration-300 hover:shadow-md hover:border-primary/50 bg-muted/30">
        <div class="flex items-center justify-between mb-4">
          <div class="flex items-center">
            <h3 class="text-xl m-0 font-semibold">{project.title}</h3>
          </div>
          <span class={`text-xs px-2 py-1 rounded-full ${getStatusClasses(project.status)}`}>{project.status}</span>
        </div>
        <p class="text-sm text-muted-foreground mb-4">{project.description}</p>
        <div class="flex flex-wrap gap-2 mb-4">
          {project.tags.map((tag) => (
            <span class={`text-xs px-2 py-1 rounded-full ${getTagClasses(tag)}`}>{tag}</span>
          ))}
        </div>
        {project.metadata && (
          <div class="metadata mt-4 p-4 bg-secondary/10 border rounded-md">
            {Object.entries(project.metadata).map(([key, value]) => (
              <div class="mb-2">
                <span class="font-semibold text-sm text-secondary-foreground">{key.charAt(0).toUpperCase() + key.slice(1)}:</span>
                <span class="text-sm ml-2">{value}</span>
              </div>
            ))}
          </div>
        )}
      </div>
    ))}
  </div>
</section>
