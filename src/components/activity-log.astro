---
import type { LogitActivity } from "@/types";
import ActivityItem from './activity-item.astro';
import GroupedActivityItem from './grouped-activity-item.astro';
import { LOGIT_ACTIVITIES } from "@/data/activities";

function groupActivities(items: LogitActivity[]) {
  const grouped: { [key: string]: LogitActivity[] } = {};
  items.forEach(item => {
    const key = `${item.type}-${item.title}`;
    if (!grouped[key]) {
      grouped[key] = [];
    }
    grouped[key].push(item);
  });
  return Object.values(grouped);
}

const groupedActivities = groupActivities(LOGIT_ACTIVITIES);
---

<section class="activity-log bg-background text-foreground rounded-lg">
  <div class="flex justify-between items-center mb-6">
    <h2 class="text-lg font-semibold">Activity Log</h2>
    <div class="flex items-center space-x-4">
      <label class="flex items-center cursor-pointer">
        <span class="mr-2 text-sm">Show all activity</span>
        <div class="relative">
          <input type="checkbox" id="toggleView" class="sr-only peer">
          <div class="w-11 h-6 bg-muted rounded-full peer peer-checked:after:translate-x-full after:content-[''] after:absolute after:top-0.5 after:left-[2px] after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary"></div>
        </div>
      </label>
    </div>
  </div>

  <div id="allActivities" class="space-y-5 relative">
    <div class="absolute left-4 top-4 w-px bg-border" style={`height: calc(100% - ${LOGIT_ACTIVITIES.length * 24}px);`}></div>
    {LOGIT_ACTIVITIES.map((item, index) => (
      <ActivityItem item={item} isLast={index === LOGIT_ACTIVITIES.length - 1} />
    ))}
  </div>

  <div id="groupedActivities" class="space-y-5 relative hidden">
    <div class="absolute left-4 top-4 w-px bg-border" style={`height: calc(100% - ${groupedActivities.length * 30}px);`}></div>
    {groupedActivities.map((group, index) => (
      <GroupedActivityItem group={group} isLast={index === groupedActivities.length - 1} />
    ))}
  </div>
</section>

<script is:inline data-astro-rerun>
  document.addEventListener('astro:page-load', () => {
    const toggleView = document.getElementById('toggleView');
    const allActivities = document.getElementById('allActivities');
    const groupedActivities = document.getElementById('groupedActivities');

    toggleView.addEventListener('change', function() {
      if (this.checked) {
        allActivities.classList.add('hidden');
        groupedActivities.classList.remove('hidden');
      } else {
        allActivities.classList.remove('hidden');
        groupedActivities.classList.add('hidden');
      }
    });
  }, {once: true});
</script>
