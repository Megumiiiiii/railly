---
import type { MathAcademyActivity } from "@/types";
import { getTagClasses } from "@/utils/classNames";
import { getProgressBarColor } from "@/utils/helpers";
import { formatDate } from "@/utils/helpers";

interface Props {
  item: MathAcademyActivity;
}

const { item } = Astro.props;
---

<div
  class="flex-grow border bg-muted/30 p-4 rounded-md transition-all hover:shadow-md hover:border-primary/50"
>
  <p class="font-semibold">{item.title}</p>
  {
    item.details && (
      <p class="text-sm text-muted-foreground mt-1">{item.details}</p>
    )
  }

  {
    item.progress && (
      <div class="mt-2">
        <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700">
          <div
            class={`h-2.5 rounded-full ${getProgressBarColor((Number(item.progress?.todayXP) / Number(item.progress.dailyGoal)) * 100)}`}
            style={`width: ${Math.min((Number(item.progress?.todayXP) / Number(item.progress.dailyGoal)) * 100, 100)}%`}
          />
        </div>
        <p class="text-xs text-muted-foreground mt-1">
          Today's Progress: {item.progress.todayXP}/{item.progress.dailyGoal} XP
        </p>
        <p class="text-sm font-semibold mt-2">
          Total XP: {item.progress.totalXP}
        </p>
        <p class="text-sm mt-1">Current Level: {item.progress.currentLevel}</p>
        {item.progress.lessonsCompleted && (
          <p class="text-sm mt-1">
            Lessons Completed: {item.progress.lessonsCompleted}
          </p>
        )}
      </div>
    )
  }

  {
    item.topics && (
      <div class="mt-2 pb-2.5 border-b">
        <p class="text-sm m-0 font-semibold">Topics covered:</p>
        <div class="flex flex-wrap gap-1 mt-1.5">
          {item.topics.map((topic) => (
            <span class="text-xs bg-primary/10 text-primary px-2 py-0.5 rounded-full">
              {topic}
            </span>
          ))}
        </div>
      </div>
    )
  }

  <div class="flex justify-between items-center mt-1">
    <div class="flex flex-wrap gap-2">
      {
        item.tags.map((tag) => (
          <span class={`text-xs px-2 py-1 rounded-full ${getTagClasses(tag)}`}>
            {tag}
          </span>
        ))
      }
    </div>
    <p class="text-xs text-muted-foreground">{formatDate(item.date)}</p>
  </div>
</div>
