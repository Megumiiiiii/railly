---
import { formatDate } from "@/utils/helpers";
import { getTagClasses } from "@/utils/classNames";
import { getProgressBarColor } from "@/utils/helpers";
import type { StudyActivity } from "@/types";

interface Props {
  item: StudyActivity;
}

const { item } = Astro.props;
const percentage =
  (Number(item.bookProgress?.currentChapter) /
    Number(item.bookProgress?.totalChapters)) *
  100;
---

<div
  class="flex-grow border bg-muted/30 p-4 rounded-md transition-all hover:shadow-md hover:border-primary/50"
>
  <p class="font-semibold">{item.title}</p>
  {
    item.details && (
      <p class="text-sm text-muted-foreground mt-1">{item.details}</p>
    )
  }

  {
    item.bookProgress && (
      <div class="mt-2">
        <div class="w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700">
          <div
            class={`h-2.5 rounded-full ${getProgressBarColor(percentage)}`}
            style={`width: ${percentage}%`}
          />
        </div>
        <p class="text-xs text-muted-foreground mt-1">
          Chapter {item.bookProgress.currentChapter}/
          {item.bookProgress.totalChapters}
          {item.timeSpent && ` â€¢ Time spent: ${item.timeSpent} minutes`}
        </p>
      </div>
    )
  }

  {
    item.topics && (
      <div class="mt-2 pb-2.5 border-b">
        <p class="text-sm m-0 font-semibold">Topics covered:</p>
        <div class="flex flex-wrap gap-1 mt-1.5">
          {item.topics.map((topic) => (
            <span class="text-xs bg-primary/10 text-primary px-2 py-0.5 rounded-full">
              {topic}
            </span>
          ))}
        </div>
      </div>
    )
  }

  <div class="flex justify-between items-center mt-1">
    <div class="flex flex-wrap gap-2">
      {
        item.tags.map((tag) => (
          <span class={`text-xs px-2 py-1 rounded-full ${getTagClasses(tag)}`}>
            {tag}
          </span>
        ))
      }
    </div>
    <p class="text-xs text-muted-foreground">{formatDate(item.date)}</p>
  </div>
</div>
