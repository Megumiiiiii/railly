---
import MainLayout from "./main-layout.astro";

const { title, description, date, slug, headings } = Astro.props;

const formattedDate = new Date(date).toLocaleDateString("en-US", {
  month: "short",
  day: "numeric",
  year: "numeric",
});

function getReadingTime(content: string) {
  const wordsPerMinute = 600;
  const numberOfWords = content.split(/\s/g).length;
  const minutes = numberOfWords / wordsPerMinute;
  return Math.ceil(minutes);
}

const content = await Astro.slots.render("default");
const readingTime = getReadingTime(content);
---

<MainLayout
  title={title}
  description={description}
  author="Railly Hugo"
  backTitle="Writing"
  backUrl="/writing"
  headings={headings}
  image={"/writing/" + slug + "/og.png"}
>
  <div
    class="[grid-content:2] prose prose-ul:leading-6 prose-ol:leading-6 prose-p:text-foreground prose-li:text-foreground prose-headings:text-[#0d0c0c] prose-strong:text-[#0d0c0c] prose-strong:font-bold dark:prose-headings:text-[#e5e5de] dark:prose-strong:text-[#e5e5de] dark:prose-invert font-sans w-full max-w-full md:max-w-[768px] antialiased prose-a:decoration-muted-foreground/30 dark:prose-a:decoration-muted-foreground/70 prose-a:underline-offset-2 hover:prose-a:decoration-muted-foreground/70 dark:hover:prose-a:decoration-muted-foreground transition-colors duration-500 prose-hr:border-border prose-blockquote:border-foreground/70"
  >
    <h1 class="font-bold m-0 text-center">{title}</h1>
    <p class="text-sm mt-2 mb-8 text-muted-foreground text-center">
      {formattedDate} â€¢ {readingTime} min read
    </p>
    <hr class="mt-0 mb-6" />
    <slot />
  </div>
</MainLayout>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const copyButtonLabel = "Copy";
    const codeBlocks = Array.from(document.querySelectorAll("pre"));

    codeBlocks.forEach((codeBlock) => {
      const wrapper = document.createElement("div");
      wrapper.classList.add("relative");

      const copyButton = document.createElement("button");
      copyButton.className =
        "absolute right-2 top-2 rounded-full bg-background border border-zinc-200 dark:border-zinc-700 py-1 px-3 text-xs font-medium text-muted-foreground hover:text-foreground hover:bg-muted focus:outline-none transition";
      copyButton.innerHTML = createButtonContent(copyButtonLabel);

      codeBlock.setAttribute("tabindex", "0");
      wrapper.appendChild(copyButton);
      codeBlock.parentNode?.insertBefore(wrapper, codeBlock);
      wrapper.appendChild(codeBlock);

      copyButton.addEventListener("click", async () => {
        if (!copyButton.disabled) {
          await copyCode(codeBlock, copyButton);
        }
      });
    });

    function createButtonContent(label: any) {
      return `
        <span class="flex items-center gap-1">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
          </svg>
          <span class="hidden md:block">
            ${label}
          </span>
        </span>
      `;
    }

    async function copyCode(block: HTMLElement, button: HTMLButtonElement) {
      const code = block.querySelector("code");
      const text = code?.innerText;

      await navigator.clipboard.writeText(text || "");

      button.disabled = true;
      button.classList.add("cursor-not-allowed");
      button.innerHTML = `
        <span class="flex items-center gap-1">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
          </svg>
          <span class="hidden md:block">
            Copied!
          </span>
        </span>
      `;

      setTimeout(() => {
        button.innerHTML = createButtonContent(copyButtonLabel);
        button.classList.remove("cursor-not-allowed");
        button.disabled = false;
      }, 1000);
    }
  });
</script>

<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/katex@0.15.1/dist/katex.css"
  integrity="sha384-WsHMgfkABRyG494OmuiNmkAOk8nhO1qE+Y6wns6v+EoNoTNxrWxYpl5ZYWFOLPCM"
  crossorigin="anonymous"
/>
